html(lang='en')
  head
    meta(http-equiv='Content-Type', content='text/html; charset=utf-8')
    title organizer
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css')
    link(rel='stylesheet', href='/stylesheets/fileorganizer.css')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js')
    //- script(src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/d3-selection/1.1.0/d3-selection.min.js')
  body
    .flex-container
      .sidebar
        a(href='dashboard') Dashboard
          br
          br
        form(method='post', enctype='multipart/form-data')
          | Select something to upload: 
          input#fileToUpload(type='file', name='fileToUpload')
          |  
          input(type='submit', value='Upload File', name='submit')
        br
        br
        br
        br
        p To download, right click the link of the file you wish to download and select "Save link as..."
      .left
        .title topologies
        .list
          if (topologies)
            each val in topologies
              div
                button.btn.btn-default.btn-sm.custom-button(type='button' title='delete' onclick='topoVerifyDelete("'+val.toponame+'","'+val.location+'")')
                  span.glyphicon.glyphicon-trash
                button.btn.btn-default.btn-sm.custom-button(type='button' title='go to editor' onclick='location.href="editor/'+val.location+'"')
                  span.glyphicon.glyphicon-chevron-right
                a(href='api/topo/'+val.location)= val.toponame
                //- span.glyphicon.glyphicon-pencil
                  title rename
      .right
        .title active slices
        .form
          form#ssl(method='post', enctype='multipart/form-data')
            span upload your ssl certificate  
            input#sslcert(type='file', name='sslcert', required)
            input#sslsubmitbutton(type='submit', value='Query active slices', name='submit')


        .list#slicelist
          if (activeslices)
            each val in activeslices
              div
                button.btn.btn-default.btn-sm.custom-button(type='button' title='go to editor' onclick='location.href="editor/'+val.location+'"')
                  span.glpyhicon.glyphicon-chevron-right
                a(href='api/topo/'+val.location)= val.toponame


script.
  function topoVerifyDelete(fileName, fileloc) {
    if (confirm("You are about to delete " + fileName + ". Are you sure?")) {
      // success is called if ( status >= 200 && status < 300 || status === 304 )
      //- $.ajax({url:"organizer/"+fileloc, type:"DELETE", success: function(result) {
      //-   location.reload();
      //- }})
      var http = new XMLHttpRequest();
      var url = "api/topo/" + fileloc
      http.open("DELETE", url, true);

      http.onreadystatechange = function() {//Call a function when the state changes.
        if(http.readyState == 4 && http.status == 200) {
          location.reload();
        }
      }
      http.send();
    }
  }

  function sliceVerifyDelete(slicename) {
    if (confirm("You are about to delete " + slicename + ". Are you sure?")) {
      var formdata = new FormData();
      formdata.append('sslcert', $('#sslcert')[0].files[0] )
      $.ajax({

        url: 'api/ahab/'+slicename,
        type: 'DELETE',
        data: formdata,
        processData: false,
        contentType: false,
        success: function() {
          $('#ssl').submit()
          alert('success delete');
        },
        error: function() {
          alert('error delete');
        }
      })
    }
  }

  function relistslices(list) {
    $('#slicelist').empty();
    var ele = d3.select('#slicelist').selectAll('div').data(list)
      .enter().append('div');
    ele.append('button')
      .attr('class', 'btn btn-default btn-sm custom-button')
      .attr('type', 'button')
      .attr('title', 'delete')
      .attr('onclick', function(d) { return 'sliceVerifyDelete("'+d+'")' })
      .append('span')
        .attr('class','glyphicon glyphicon-trash');
    ele.append('a')
      .attr('href', 'api/topo/')
      .text(function(d) { return d; });
    /* for(let slicename of list) {

      console.log(slicename);
      $("<a href='api/topo/'>"+slicename+"</a>").appendTo("div").appendTo('#slicelist')
    } */
  }

  $('#ssl').submit(function(e) {
    e.preventDefault();
    var formdata = new FormData();
    formdata.append('sslcert', $('#sslcert')[0].files[0] )

    $.ajax({
      url: 'api/listactiveslices',
      type: 'POST',
      data: formdata,
      processData: false,
      contentType: false,
      success: function(list) {
        relistslices(list);
        alert(list);
      },
      error: function() {
        alert('some error');
      }

    })


  })